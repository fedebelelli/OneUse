{"version":3,"file":"ngx-material-file-input.umd.js.map","sources":["ng://ngx-material-file-input/lib/model/file-input-config.model.ts","ng://ngx-material-file-input/lib/model/file-input.model.ts","ng://ngx-material-file-input/lib/file-input/file-input.component.ts","ng://ngx-material-file-input/lib/pipe/byte-format.pipe.ts","ng://ngx-material-file-input/lib/material-file-input.module.ts","ng://ngx-material-file-input/lib/validator/file-validator.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\n/**\n * Optional token to provide custom configuration to the module\n */\nexport const NGX_MAT_FILE_INPUT_CONFIG = new InjectionToken<FileInputConfig>(\n  'ngx-mat-file-input.config'\n);\n\n/**\n * Provide additional configuration to dynamically customize the module injection\n */\nexport class FileInputConfig {\n  /**\n   * Unit used with the ByteFormatPipe, default value is *Byte*.\n   * The first letter is used for the short notation.\n   */\n  sizeUnit: string;\n}\n","/**\n * The files to be uploaded\n */\nexport class FileInput {\n  private _fileNames: string;\n\n  constructor(private _files: File[] | null, private delimiter: string = ', ') {\n    this._fileNames = (this._files || []).map((f: File) => f.name).join(delimiter);\n  }\n\n  get files() {\n    return this._files || [];\n  }\n\n  get fileNames(): string {\n    return this._fileNames;\n  }\n}\n","import { Component, OnInit, Input, ElementRef, OnDestroy, HostBinding, Renderer2, HostListener, Optional, Self } from '@angular/core';\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\nimport { MatFormFieldControl } from '@angular/material';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\n\nimport { FileInput } from '../model/file-input.model';\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'ngx-mat-file-input',\n  templateUrl: './file-input.component.html',\n  styleUrls: ['./file-input.component.css'],\n  providers: [{ provide: MatFormFieldControl, useExisting: FileInputComponent }]\n})\nexport class FileInputComponent implements MatFormFieldControl<FileInput>, ControlValueAccessor, OnInit, OnDestroy {\n  static nextId = 0;\n\n  stateChanges = new Subject<void>();\n  focused = false;\n  controlType = 'file-input';\n\n  @Input() autofilled = false;\n\n  private _placeholder: string;\n  private _required = false;\n\n  @Input() valuePlaceholder: string;\n  @Input() multiple: boolean;\n  @Input() accept: string | null = null;\n\n  @HostBinding() id = `ngx-mat-file-input-${FileInputComponent.nextId++}`;\n  @HostBinding('attr.aria-describedby') describedBy = '';\n\n  setDescribedByIds(ids: string[]) {\n    this.describedBy = ids.join(' ');\n  }\n\n  @Input()\n  get value(): FileInput | null {\n    return this.empty ? null : new FileInput(this._elementRef.nativeElement.value || []);\n  }\n  set value(fileInput: FileInput | null) {\n    if (fileInput) {\n      this.writeValue(fileInput);\n      this.stateChanges.next();\n    }\n  }\n\n  @Input()\n  get placeholder() {\n    return this._placeholder;\n  }\n  set placeholder(plh) {\n    this._placeholder = plh;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Whether the current input has files\n   */\n  get empty() {\n    return !this._elementRef.nativeElement.value || this._elementRef.nativeElement.value.length === 0;\n  }\n\n  @HostBinding('class.mat-form-field-should-float')\n  get shouldLabelFloat() {\n    return this.focused || !this.empty || this.valuePlaceholder !== undefined;\n  }\n\n  @Input()\n  get required() {\n    return this._required;\n  }\n  set required(req: boolean) {\n    this._required = coerceBooleanProperty(req);\n    this.stateChanges.next();\n  }\n\n  @HostBinding('class.file-input-disabled')\n  get isDisabled() {\n    return this.disabled;\n  }\n  @Input()\n  get disabled(): boolean {\n    return this._elementRef.nativeElement.disabled;\n  }\n  set disabled(dis: boolean) {\n    this.setDisabledState(coerceBooleanProperty(dis));\n    this.stateChanges.next();\n  }\n\n  @Input()\n  get errorState(): boolean {\n    return this.ngControl.errors !== null && !!this.ngControl.touched;\n  }\n\n  onContainerClick(event: MouseEvent) {\n    if ((event.target as Element).tagName.toLowerCase() !== 'input' && !this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').focus();\n      this.focused = true;\n      this.open();\n    }\n  }\n\n  /**\n   * @see https://angular.io/api/forms/ControlValueAccessor\n   */\n  constructor(\n    @Optional()\n    @Self()\n    public ngControl: NgControl,\n    private fm: FocusMonitor,\n    private _elementRef: ElementRef,\n    private _renderer: Renderer2\n  ) {\n    if (this.ngControl != null) {\n      this.ngControl.valueAccessor = this;\n    }\n    fm.monitor(_elementRef.nativeElement, true).subscribe(origin => {\n      this.focused = !!origin;\n      this.stateChanges.next();\n    });\n  }\n\n  private _onChange = (_: any) => {};\n  private _onTouched = () => {};\n\n  get fileNames() {\n    return this.value ? this.value.fileNames : this.valuePlaceholder;\n  }\n\n  writeValue(obj: FileInput | null): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'value', obj instanceof FileInput ? obj.files : null);\n  }\n\n  registerOnChange(fn: (_: any) => void): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    this._onTouched = fn;\n  }\n\n  /**\n   * Remove all files from the file input component\n   * @param [event] optional event that may have triggered the clear action\n   */\n  clear(event?: Event) {\n    if (event) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n    this.value = new FileInput([]);\n    this._elementRef.nativeElement.querySelector('input').value = null;\n    this._onChange(this.value);\n  }\n\n  @HostListener('change', ['$event'])\n  change(event: Event) {\n    const fileList: FileList | null = (<HTMLInputElement>event.target).files;\n    const fileArray: File[] = [];\n    if (fileList) {\n      for (let i = 0; i < fileList.length; i++) {\n        fileArray.push(fileList[i]);\n      }\n    }\n    this.value = new FileInput(fileArray);\n    this._onChange(this.value);\n  }\n\n  @HostListener('focusout')\n  blur() {\n    this.focused = false;\n    this._onTouched();\n  }\n\n  setDisabledState(isDisabled: boolean): void {\n    this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  ngOnInit() {\n    this.multiple = coerceBooleanProperty(this.multiple);\n  }\n\n  open() {\n    if (!this.disabled) {\n      this._elementRef.nativeElement.querySelector('input').click();\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    this.fm.stopMonitoring(this._elementRef.nativeElement);\n  }\n}\n","import { Pipe, PipeTransform, Optional, Inject } from '@angular/core';\nimport { FileInputConfig, NGX_MAT_FILE_INPUT_CONFIG } from '../model/file-input-config.model';\n\n@Pipe({\n  name: 'byteFormat'\n})\nexport class ByteFormatPipe implements PipeTransform {\n  private unit: string;\n\n  constructor(\n    @Optional()\n    @Inject(NGX_MAT_FILE_INPUT_CONFIG)\n    private config: FileInputConfig\n  ) {\n    this.unit = config ? config.sizeUnit : 'Byte';\n  }\n\n  transform(value: any, args?: any): any {\n    if (parseInt(value, 10) >= 0) {\n      value = this.formatBytes(+value, +args);\n    }\n    return value;\n  }\n\n  private formatBytes(bytes: number, decimals?: number) {\n    if (bytes === 0) {\n      return '0 ' + this.unit;\n    }\n    const B = this.unit.charAt(0);\n    const k = 1024;\n    const dm = decimals || 2;\n    const sizes = [this.unit, 'K' + B, 'M' + B, 'G' + B, 'T' + B, 'P' + B, 'E' + B, 'Z' + B, 'Y' + B];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FocusMonitor } from '@angular/cdk/a11y';\nimport { FileInputComponent } from './file-input/file-input.component';\nimport { ByteFormatPipe } from './pipe/byte-format.pipe';\nimport { FileInputConfig } from './model/file-input-config.model';\n\n@NgModule({\n  declarations: [FileInputComponent, ByteFormatPipe],\n  providers: [FocusMonitor],\n  exports: [FileInputComponent, ByteFormatPipe]\n})\nexport class MaterialFileInputModule {}\n","import { ValidatorFn, AbstractControl } from '@angular/forms';\nimport { FileInput } from '../model/file-input.model';\n\nexport namespace FileValidator {\n  /**\n   * Function to control content of files\n   *\n   * @param bytes max number of bytes allowed\n   *\n   * @returns\n   */\n  export function maxContentSize(bytes: number): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      const size = control && control.value ? (control.value as FileInput).files.map(f => f.size).reduce((acc, i) => acc + i, 0) : 0;\n      const condition = bytes >= size;\n      return condition\n        ? null\n        : {\n            maxContentSize: {\n              actualSize: size,\n              maxSize: bytes\n            }\n          };\n    };\n  }\n}\n"],"names":["InjectionToken","Subject","coerceBooleanProperty","Component","MatFormFieldControl","NgControl","Optional","Self","FocusMonitor","ElementRef","Renderer2","Input","HostBinding","HostListener","Pipe","Inject","NgModule","FileValidator"],"mappings":"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"}
