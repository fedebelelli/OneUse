{"version":3,"file":"angular-custom-dropdown.umd.js","sources":["~/angular-custom-dropdown/src/dropdown.module.ts","~/angular-custom-dropdown/src/dropdown-toggle.directive.ts","~/angular-custom-dropdown/src/dropdown-menu.directive.ts","~/angular-custom-dropdown/src/dropdown.directive.ts","~/angular-custom-dropdown/src/toggle-status.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\n\nimport { DropdownDirective } from './dropdown.directive';\nimport { DropdownToggleDirective } from './dropdown-toggle.directive';\nimport { DropdownMenuDirective } from './dropdown-menu.directive';\nexport class DropdownModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [],\n  exports: [\n    DropdownDirective,\n    DropdownToggleDirective,\n    DropdownMenuDirective,\n  ],\n  declarations: [\n    DropdownDirective,\n    DropdownToggleDirective,\n    DropdownMenuDirective,\n  ],\n  providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, HostListener } from '@angular/core';\n\nimport { DropdownDirective } from './dropdown.directive';\nexport class DropdownToggleDirective {\n/**\n * @param {?} dropdown\n */\nconstructor(\npublic dropdown: DropdownDirective) { }\n/**\n * @return {?}\n */\ntoggle() {\n    this.dropdown.toggle();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dropdownToggle]',\n  exportAs: 'dropdownToggle',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownDirective, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'toggle': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction DropdownToggleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownToggleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownToggleDirective.ctorParameters;\n/** @type {?} */\nDropdownToggleDirective.propDecorators;\n/** @type {?} */\nDropdownToggleDirective.prototype.dropdown;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Host, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport'rxjs/add/operator/takeUntil';\n\nimport { TOGGLE_STATUS } from './toggle-status';\nimport { DropdownDirective } from './dropdown.directive';\nexport class DropdownMenuDirective implements OnInit, OnDestroy {\n  ngUnsubscribe: Subject<void> = new Subject<void>();\n/**\n * @param {?} dropdown\n * @param {?} elementRef\n */\nconstructor(\npublic dropdown: DropdownDirective,\nprivate elementRef: ElementRef,\n  ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.dropdown.statusChange()\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe((newStatus: TOGGLE_STATUS) => {\n        if (newStatus === TOGGLE_STATUS.OPEN) {\n          // Listen to click events to realise when to close the dropdown.\n          document.addEventListener('click', this.onDocumentClick.bind(this), true);\n        } else {\n          document.removeEventListener('click', this.onDocumentClick, true);\n        }\n      });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n\n    document.removeEventListener('click', this.onDocumentClick, true);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDocumentClick(event: MouseEvent) {\n    const /** @type {?} */ target: EventTarget = event.target;\n    if (target instanceof HTMLElement && target.hasAttribute('dropdownToggle')) {\n      // Ignore dropdownToggle element, even if it's outside the menu.\n      return;\n    }\n    const /** @type {?} */ isInsideClick = this.elementRef.nativeElement.contains(target);\n    if (!isInsideClick || target instanceof HTMLElement && target.hasAttribute('href')) {\n      this.dropdown.close();\n    } else {\n      this.dropdown.open();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dropdownMenu]',\n  exportAs: 'dropdownMenu',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownDirective, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction DropdownMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownMenuDirective.ctorParameters;\n/** @type {?} */\nDropdownMenuDirective.prototype.ngUnsubscribe;\n/** @type {?} */\nDropdownMenuDirective.prototype.dropdown;\n/** @type {?} */\nDropdownMenuDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Renderer, HostListener } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { TOGGLE_STATUS } from './toggle-status';\nexport class DropdownDirective {\nprivate status: TOGGLE_STATUS = TOGGLE_STATUS.CLOSE;\nprivate status$: Subject<TOGGLE_STATUS> = new Subject<TOGGLE_STATUS>();\n/**\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(\nprivate elementRef: ElementRef,\nprivate renderer: Renderer,\n  ) { }\n/**\n * @param {?=} active\n * @return {?}\n */\nsetActive(active = true) {\n    this.renderer.setElementClass(this.elementRef.nativeElement, 'active', active);\n  }\n/**\n * @return {?}\n */\ntoggle() {\n    if (this.status === TOGGLE_STATUS.OPEN) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * @return {?}\n */\nopen() {\n    this.renderer.setElementClass(this.elementRef.nativeElement, 'open', true);\n    if (this.status !== TOGGLE_STATUS.OPEN) {\n      this.status$.next(TOGGLE_STATUS.OPEN);\n    }\n    this.status = TOGGLE_STATUS.OPEN;\n  }\n/**\n * @return {?}\n */\nclose() {\n    this.renderer.setElementClass(this.elementRef.nativeElement, 'open', false);\n    if (this.status !== TOGGLE_STATUS.CLOSE) {\n      this.status$.next(TOGGLE_STATUS.CLOSE);\n    }\n    this.status = TOGGLE_STATUS.CLOSE;\n  }\n/**\n * @return {?}\n */\nstatusChange(): Observable<TOGGLE_STATUS> {\n    return this.status$.asObservable();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dropdown]',\n  exportAs: 'dropdown',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n\nfunction DropdownDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownDirective.ctorParameters;\n/** @type {?} */\nDropdownDirective.prototype.status;\n/** @type {?} */\nDropdownDirective.prototype.status$;\n/** @type {?} */\nDropdownDirective.prototype.elementRef;\n/** @type {?} */\nDropdownDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type TOGGLE_STATUS = number;\nexport let TOGGLE_STATUS: any = {};\nTOGGLE_STATUS.OPEN = 0;\nTOGGLE_STATUS.CLOSE = 1;\nTOGGLE_STATUS[TOGGLE_STATUS.OPEN] = \"OPEN\";\nTOGGLE_STATUS[TOGGLE_STATUS.CLOSE] = \"CLOSE\";\n\n"],"names":["NgModule","HostListener","Host","Directive","ElementRef","Subject","Renderer"],"mappings":"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"}
