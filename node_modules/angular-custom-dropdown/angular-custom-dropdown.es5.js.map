{"version":3,"file":"angular-custom-dropdown.es5.js","sources":["ts/src/angular-custom-dropdown.ts","ts/src/dropdown.module.ts","ts/src/dropdown-toggle.directive.ts","ts/src/dropdown-menu.directive.ts","ts/src/dropdown.directive.ts","ts/src/toggle-status.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {DropdownMenuDirective,DropdownDirective,DropdownModule,TOGGLE_STATUS} from './index';\n\nexport {DropdownToggleDirective as Éµa} from './dropdown-toggle.directive';","import { NgModule } from '@angular/core';\n\nimport { DropdownDirective } from './dropdown.directive';\nimport { DropdownToggleDirective } from './dropdown-toggle.directive';\nimport { DropdownMenuDirective } from './dropdown-menu.directive';\nexport class DropdownModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [],\n  exports: [\n    DropdownDirective,\n    DropdownToggleDirective,\n    DropdownMenuDirective,\n  ],\n  declarations: [\n    DropdownDirective,\n    DropdownToggleDirective,\n    DropdownMenuDirective,\n  ],\n  providers: [],\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction DropdownModule_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, Host, HostListener } from '@angular/core';\n\nimport { DropdownDirective } from './dropdown.directive';\nexport class DropdownToggleDirective {\n/**\n * @param {?} dropdown\n */\nconstructor(\npublic dropdown: DropdownDirective) { }\n/**\n * @return {?}\n */\ntoggle() {\n    this.dropdown.toggle();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dropdownToggle]',\n  exportAs: 'dropdownToggle',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownDirective, decorators: [{ type: Host }, ]},\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'toggle': [{ type: HostListener, args: ['click', ] },],\n};\n}\n\nfunction DropdownToggleDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownToggleDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownToggleDirective.ctorParameters;\n/** @type {?} */\nDropdownToggleDirective.propDecorators;\n/** @type {?} */\nDropdownToggleDirective.prototype.dropdown;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Host, OnInit, OnDestroy } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport'rxjs/add/operator/takeUntil';\n\nimport { TOGGLE_STATUS } from './toggle-status';\nimport { DropdownDirective } from './dropdown.directive';\nexport class DropdownMenuDirective implements OnInit, OnDestroy {\n  ngUnsubscribe: Subject<void> = new Subject<void>();\n/**\n * @param {?} dropdown\n * @param {?} elementRef\n */\nconstructor(\npublic dropdown: DropdownDirective,\nprivate elementRef: ElementRef,\n  ) { }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.dropdown.statusChange()\n      .takeUntil(this.ngUnsubscribe)\n      .subscribe((newStatus: TOGGLE_STATUS) => {\n        if (newStatus === TOGGLE_STATUS.OPEN) {\n          // Listen to click events to realise when to close the dropdown.\n          document.addEventListener('click', this.onDocumentClick.bind(this), true);\n        } else {\n          document.removeEventListener('click', this.onDocumentClick, true);\n        }\n      });\n  }\n/**\n * @return {?}\n */\nngOnDestroy() {\n    this.ngUnsubscribe.next();\n    this.ngUnsubscribe.complete();\n\n    document.removeEventListener('click', this.onDocumentClick, true);\n  }\n/**\n * @param {?} event\n * @return {?}\n */\nonDocumentClick(event: MouseEvent) {\n    const /** @type {?} */ target: EventTarget = event.target;\n    if (target instanceof HTMLElement && target.hasAttribute('dropdownToggle')) {\n      // Ignore dropdownToggle element, even if it's outside the menu.\n      return;\n    }\n    const /** @type {?} */ isInsideClick = this.elementRef.nativeElement.contains(target);\n    if (!isInsideClick || target instanceof HTMLElement && target.hasAttribute('href')) {\n      this.dropdown.close();\n    } else {\n      this.dropdown.open();\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dropdownMenu]',\n  exportAs: 'dropdownMenu',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: DropdownDirective, decorators: [{ type: Host }, ]},\n{type: ElementRef, },\n];\n}\n\nfunction DropdownMenuDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownMenuDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownMenuDirective.ctorParameters;\n/** @type {?} */\nDropdownMenuDirective.prototype.ngUnsubscribe;\n/** @type {?} */\nDropdownMenuDirective.prototype.dropdown;\n/** @type {?} */\nDropdownMenuDirective.prototype.elementRef;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Directive, ElementRef, Renderer, HostListener } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\nimport { TOGGLE_STATUS } from './toggle-status';\nexport class DropdownDirective {\nprivate status: TOGGLE_STATUS = TOGGLE_STATUS.CLOSE;\nprivate status$: Subject<TOGGLE_STATUS> = new Subject<TOGGLE_STATUS>();\n/**\n * @param {?} elementRef\n * @param {?} renderer\n */\nconstructor(\nprivate elementRef: ElementRef,\nprivate renderer: Renderer,\n  ) { }\n/**\n * @param {?=} active\n * @return {?}\n */\nsetActive(active = true) {\n    this.renderer.setElementClass(this.elementRef.nativeElement, 'active', active);\n  }\n/**\n * @return {?}\n */\ntoggle() {\n    if (this.status === TOGGLE_STATUS.OPEN) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n/**\n * @return {?}\n */\nopen() {\n    this.renderer.setElementClass(this.elementRef.nativeElement, 'open', true);\n    if (this.status !== TOGGLE_STATUS.OPEN) {\n      this.status$.next(TOGGLE_STATUS.OPEN);\n    }\n    this.status = TOGGLE_STATUS.OPEN;\n  }\n/**\n * @return {?}\n */\nclose() {\n    this.renderer.setElementClass(this.elementRef.nativeElement, 'open', false);\n    if (this.status !== TOGGLE_STATUS.CLOSE) {\n      this.status$.next(TOGGLE_STATUS.CLOSE);\n    }\n    this.status = TOGGLE_STATUS.CLOSE;\n  }\n/**\n * @return {?}\n */\nstatusChange(): Observable<TOGGLE_STATUS> {\n    return this.status$.asObservable();\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n  selector: '[dropdown]',\n  exportAs: 'dropdown',\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: ElementRef, },\n{type: Renderer, },\n];\n}\n\nfunction DropdownDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropdownDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropdownDirective.ctorParameters;\n/** @type {?} */\nDropdownDirective.prototype.status;\n/** @type {?} */\nDropdownDirective.prototype.status$;\n/** @type {?} */\nDropdownDirective.prototype.elementRef;\n/** @type {?} */\nDropdownDirective.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport type TOGGLE_STATUS = number;\nexport let TOGGLE_STATUS: any = {};\nTOGGLE_STATUS.OPEN = 0;\nTOGGLE_STATUS.CLOSE = 1;\nTOGGLE_STATUS[TOGGLE_STATUS.OPEN] = \"OPEN\";\nTOGGLE_STATUS[TOGGLE_STATUS.CLOSE] = \"CLOSE\";\n\n"],"names":["Subject"],"mappings":"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"}
